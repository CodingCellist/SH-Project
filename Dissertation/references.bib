@inproceedings{Brady:2011:ISP:1929529.1929536,
    author      = {Brady, Edwin C.},
    title       = {IDRIS ---: Systems Programming Meets Full Dependent Types},
    booktitle   = {Proceedings of the 5th ACM Workshop on Programming Languages Meets Program Verification},
    series      = {PLPV '11},
    year        = {2011},
    isbn        = {978-1-4503-0487-0},
    location    = {Austin, Texas, USA},
    pages       = {43--54},
    numpages    = {12},
    url         = {http://doi.acm.org/10.1145/1929529.1929536},
    doi         = {10.1145/1929529.1929536},
    acmid       = {1929536},
    publisher   = {ACM},
    address     = {New York, NY, USA},
    keywords    = {data description, dependent types}
}

@article{brady2015embedded,
    title       = {Embedded Domain Specific Languages in Idris},
    author      = {Brady, Edwin},
    year        = {2015}
}

@inproceedings{10.1007/978-3-642-27694-1_18,
    author      = {Brady, Edwin
    and Hammond, Kevin},
    editor      = {Russo, Claudio
    and Zhou, Neng-Fa},
    title       = {Resource-Safe Systems Programming with Embedded Domain Specific Languages},
    booktitle   = {Practical Aspects of Declarative Languages},
    year        = {2012},
    publisher   = {Springer Berlin Heidelberg},
    address     = {Berlin, Heidelberg},
    pages       = {242--257},
    abstract    = {We introduce a new overloading notation that facilitates programming, modularity and reuse in Embedded Domain Specific Languages (EDSLs), and use it to reason about safe resource usage and state management. We separate the structural language constructs from our primitive operations, and show how precisely-typed functions can be lifted into the EDSL. In this way, we implement a generic framework for constructing state-aware EDSLs for systems programming.},
    isbn        = {978-3-642-27694-1}
}

@inproceedings{10.1007/978-3-540-39815-8_3,
    author      = {Hammond, Kevin and Michaelson, Greg},
    editor      = {Pfenning, Frank and Smaragdakis, Yannis},
    title       = {Hume: A Domain-Specific Language for Real-Time Embedded Systems},
    booktitle   = {Generative Programming and Component Engineering},
    year        = {2003},
    publisher   = {Springer Berlin Heidelberg},
    address     = {Berlin, Heidelberg},
    pages       = {37--56},
    abstract    = {This paper describes Hume: a novel domain-specific language whose purpose is to explore the expressibility/costability spectrum in resource-constrained systems, such as real-time embedded or control systems. Hume provides a number of high level features including higher-order functions, polymorphic types, arbitrary but sized user-defined data structures, asynchronous processes, lightweight exception handling, automatic memory management and domain-specific metaprogramming features, whilst seeking to guarantee strong space/time behaviour and maintaining overall determinacy.},
    isbn        = {978-3-540-39815-8}
}

@inproceedings{5558637,
    author      = {E. {Axelsson} and K. {Claessen} and G. {Dévai} and Z. {Horváth} and K. {Keijzer} and B. {Lyckegård} and A. {Persson} and M. {Sheeran} and J. {Svenningsson} and A. {Vajdax}},
    booktitle   = {Eighth ACM/IEEE International Conference on Formal Methods and Models for Codesign (MEMOCODE 2010)},
    title       = {Feldspar: A domain specific language for digital signal processing algorithms},
    year        = {2010},
    volume      = {},
    number      = {},
    pages       = {169-178},
    keywords    = {data flow analysis;functional languages;machine oriented languages;optimisation;signal processing;Feldspar;domain specific language;digital signal processing;functional language;high-level dataflow;high-level optimization;vector fusion;machine-oriented languages;Indexes;Digital signal processing;Generators;Optimization;Kernel;Arrays;DSL},
    doi         = {10.1109/MEMCOD.2010.5558637},
    ISSN        = {},
    month       = {July}
}

